{
  "$comment" : "NOTE: This file is for human reference ONLY. For programmatic use, use the GET '/json_schema/common/$schema_name' endpoints, or within conch itself, json-schema/common.yaml.",
  "$defs" : {
    "HardwareProductSpecification" : {
      "$comment" : "this is the structure of the hardware_product.specification database column",
      "additionalProperties" : true,
      "properties" : {
        "chassis" : {
          "properties" : {
            "memory" : {
              "properties" : {
                "dimms" : {
                  "$comment" : "items are in slot order, as in device report /dimms/*",
                  "items" : {
                    "properties" : {
                      "slot" : {
                        "$comment" : "compared to device report /dimms/*/memory-locator/memory-serial-number",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "minItems" : 1,
                  "type" : "array"
                }
              },
              "type" : "object"
            }
          },
          "type" : "object"
        },
        "disk_size" : {
          "$comment" : "property names correspond to device report /disks/<disk serial>/model",
          "additionalProperties" : {
            "$comment" : "property values are compared to device report /disks/<disk serial>/block_sz",
            "type" : "integer"
          },
          "required" : [
            "_default"
          ],
          "type" : "object"
        }
      },
      "type" : "object"
    },
    "device_asset_tag" : {
      "pattern" : "^\\S+$",
      "type" : "string"
    },
    "device_health" : {
      "$comment" : "corresponds to device_health_enum in the database",
      "enum" : [
        "error",
        "fail",
        "unknown",
        "pass"
      ]
    },
    "device_interface_name" : {
      "$ref" : "#/$defs/mojo_relaxed_placeholder",
      "pattern" : "^\\S+$",
      "type" : "string"
    },
    "device_phase" : {
      "$comment" : "corresponds to device_phase_enum in the database (also used for racks)",
      "enum" : [
        "integration",
        "installation",
        "production",
        "diagnostics",
        "decommissioned"
      ]
    },
    "device_serial_number" : {
      "$ref" : "#/$defs/mojo_standard_placeholder",
      "pattern" : "^\\S+$",
      "type" : "string"
    },
    "device_setting_key" : {
      "$ref" : "#/$defs/mojo_relaxed_placeholder"
    },
    "disk_serial_number" : {
      "pattern" : "^\\S+$",
      "type" : "string"
    },
    "email_address" : {
      "$ref" : "#/$defs/mojo_relaxed_placeholder",
      "format" : "email",
      "type" : "string"
    },
    "ipaddr" : {
      "oneOf" : [
        {
          "format" : "ipv4"
        },
        {
          "format" : "ipv6"
        }
      ],
      "type" : "string"
    },
    "json_pointer_token" : {
      "$comment" : "a json-pointer reference-token (see RFC6901). Special characters requiring escaping are disallowed for simplicity.",
      "pattern" : "^[A-Za-z0-9_-]+$",
      "type" : "string"
    },
    "links" : {
      "items" : {
        "format" : "uri",
        "type" : "string"
      },
      "type" : "array",
      "uniqueItems" : true
    },
    "macaddr" : {
      "pattern" : "^[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}$",
      "type" : "string"
    },
    "mojo_relaxed_placeholder" : {
      "$comment" : "see https://metacpan.org/pod/Mojolicious::Guides::Routing#Relaxed-placeholders",
      "pattern" : "^[^/]+$",
      "type" : "string"
    },
    "mojo_standard_placeholder" : {
      "$comment" : "see https://metacpan.org/pod/Mojolicious::Guides::Routing#Standard-placeholders",
      "pattern" : "^[^/.]+$",
      "type" : "string"
    },
    "non_empty_string" : {
      "minLength" : 1,
      "type" : "string"
    },
    "non_negative_integer" : {
      "minimum" : 0,
      "type" : "integer"
    },
    "non_zero_uuid" : {
      "$ref" : "#/$defs/uuid",
      "not" : {
        "const" : "00000000-0000-0000-0000-000000000000"
      }
    },
    "positive_integer" : {
      "minimum" : 1,
      "type" : "integer"
    },
    "relay_serial_number" : {
      "pattern" : "^\\S+$",
      "type" : "string"
    },
    "role" : {
      "$comment" : "corresponds to role_enum in the database",
      "enum" : [
        "ro",
        "rw",
        "admin"
      ]
    },
    "room_az" : {
      "pattern" : "^[\\w-]+$",
      "type" : "string"
    },
    "user_setting_key" : {
      "$ref" : "#/$defs/mojo_relaxed_placeholder"
    },
    "uuid" : {
      "pattern" : "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
      "type" : "string"
    },
    "validation_status" : {
      "$comment" : "corresponds to validation_status_enum in the database",
      "enum" : [
        "error",
        "fail",
        "pass"
      ]
    }
  },
  "$schema" : "https://json-schema.org/draft/2019-09/schema"
}
