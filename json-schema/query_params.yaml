---
$comment: 'Note that all parameters are parsed internally from the request URI as strings, so all type checks here use strings. When a query parameter is used more than once, its values are parsed as an arrayref. See ../modules/Conch::Plugin::JSONValidator#validate_query_params.'
$schema: 'http://json-schema.org/draft-07/schema#'
definitions:
  boolean_string:
    type: string
    enum: [ '0', '1' ]
  boolean_string_or_flag:
    description: '"?foo" and "?foo=1" are true; "?foo=0" is false'
    oneOf:
      - const: ''
      - $ref: '#/definitions/boolean_string'
  non_negative_integer_string:
    description: see common.yaml#/definitions/non_negative_integer
    type: string
    pattern: '^[0-9]+$'

  RevokeUserTokens:
    type: object
    additionalProperties: false
    properties:
      login_only:
        $ref: '#/definitions/boolean_string'
      api_only:
        $ref: '#/definitions/boolean_string'
      send_mail:
        $ref: '#/definitions/boolean_string'
    default:
      login_only: '0'
      api_only: '0'
      send_mail: '1'
    not:
      type: object
      required:
        - login_only
        - api_only
      properties:
        login_only:
          const: '1'
        api_only:
          const: '1'
  ChangePassword:
    type: object
    additionalProperties: false
    properties:
      clear_tokens:
        type: string
        enum:
          - none
          - login_only
          - all
    default:
      clear_tokens: login_only
  DeactivateUser:
    $ref: '#/definitions/ChangePassword'
  ResetUserPassword:
    type: object
    additionalProperties: false
    properties:
      clear_tokens:
        type: string
        enum:
          - none
          - login_only
          - all
      send_mail:
        $ref: '#/definitions/boolean_string'
    default:
      clear_tokens: login_only
      send_mail: '1'
  NotifyUsers:
    description: used for operations where email can optionally be sent
    type: object
    additionalProperties: false
    properties:
      send_mail:
        $ref: '#/definitions/boolean_string'
    default:
      send_mail: '1'
  GetDeviceByAttribute:
    type: object
    minProperties: 1
    maxProperties: 1
    properties:
      hostname:
        type: string
      mac:
        $ref: common.yaml#/definitions/macaddr
      ipaddr:
        $ref: common.yaml#/definitions/ipaddr
      link:
        type: string
        format: uri
    propertyNames:
      $ref: common.yaml#/definitions/device_setting_key
    additionalProperties:
      type: string
  GetValidationState:
    type: object
    additionalProperties: true  # may be used at the same time as other schemas
    properties:
      status:
        oneOf:
          - $ref: common.yaml#/definitions/validation_status
          - type: array
            uniqueItems: true
            minItems: 2
            items:
              $ref: common.yaml#/definitions/validation_status
  SetPhase:
    type: object
    additionalProperties: false
    properties:
      rack_only:
        $ref: '#/definitions/boolean_string'
    default:
      rack_only: '0'
  GetBuilds:
    type: object
    properties:
      started:
        $ref: '#/definitions/boolean_string'
      completed:
        $ref: '#/definitions/boolean_string'
    not:
      required:
        - started
        - completed
      properties:
        started:
          const: 0
        completed:
          const: 1
  WithDeviceRackData:
    type: object
    additionalProperties: true  # overlays with other schemas
    properties:
      with_device_health:
        $ref: '#/definitions/boolean_string_or_flag'
      with_device_phases:
        $ref: '#/definitions/boolean_string_or_flag'
      with_rack_phases:
        $ref: '#/definitions/boolean_string_or_flag'
  FindDevice:
    type: object
    additionalProperties: true  # may be used at the same time as other schemas
    properties:
      phase_earlier_than:
        oneOf:
          - const: ''
          - $ref: common.yaml#/definitions/device_phase
  BuildDevices:
    type: object
    additionalProperties: true  # may be used at the same time as other schemas
    properties:
      health:
        oneOf:
          - $ref: common.yaml#/definitions/device_health
          - type: array
            uniqueItems: true
            minItems: 2
            items:
              $ref: common.yaml#/definitions/device_health
      phase:
        oneOf:
          - $ref: common.yaml#/definitions/device_phase
          - type: array
            uniqueItems: true
            minItems: 2
            items:
              $ref: common.yaml#/definitions/device_phase
      active_minutes:
        $ref: '#/definitions/non_negative_integer_string'
      ids_only:
        $ref: '#/definitions/boolean_string'
      serials_only:
        $ref: '#/definitions/boolean_string'
    allOf:
      - not:
          type: object
          required: [ ids_only, serials_only ]
          properties:
            ids_only:
              const: '1'
            serials_only:
              const: '1'
      - not:
          type: object
          required: [ phase_earlier_than, phase ]
    default:
      ids_only: '0'
      serials_only: '0'
  BuildRacks:
    type: object
    additionalProperties: false
    properties:
      phase:
        oneOf:
          - $ref: common.yaml#/definitions/device_phase
          - type: array
            uniqueItems: true
            minItems: 2
            items:
              $ref: common.yaml#/definitions/device_phase
      ids_only:
        $ref: '#/definitions/boolean_string'
    default:
      ids_only: '0'
  ProcessDeviceReport:
    type: object
    additionalProperties: false
    properties:
      no_save_db:
        $ref: '#/definitions/boolean_string'
    default:
      no_save_db: '0'
  HardwareProductSpecification:
    type: object
    additionalProperties: false
    required:
      - path
    properties:
      path:
        type: string
        format: json-pointer

# vim: set sts=2 sw=2 et :
