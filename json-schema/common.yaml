---
$schema: 'https://json-schema.org/draft/2019-09/schema'
$defs:
  uuid:
    type: string
    pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
  non_zero_uuid:
    $ref: '#/$defs/uuid'
    not:
      const: 00000000-0000-0000-0000-000000000000
  ipaddr:
    type: string
    oneOf:
      - format: ipv4
      - format: ipv6
  date-time:
    format: date-time
    not:
      type: string
      pattern: '^000[01]'
  macaddr:
    type: string
    pattern: '^[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}:[0-9a-f]{2}$'
  relay_serial_number:
    type: string
    pattern: ^\S+$
  device_serial_number:
    type: string
    pattern: ^\S+$
    $ref: '#/$defs/mojo_standard_placeholder'
  device_asset_tag:
    type: string
    pattern: ^\S+$
  device_health:
    $comment: corresponds to device_health_enum in the database
    enum: [ error, fail, unknown, pass ]
  device_phase:
    $comment: corresponds to device_phase_enum in the database (also used for racks)
    enum: [ integration, installation, production, diagnostics, decommissioned ]
  device_interface_name:
    type: string
    pattern: ^\S+$
    $ref: '#/$defs/mojo_relaxed_placeholder'
  setting_key:
    $ref: '#/$defs/mojo_relaxed_placeholder'
  disk_serial_number:
    type: string
    pattern: ^\S+$
  room_az:
    type: string
    pattern: ^[\w-]+$
  role:
    $comment: corresponds to role_enum in the database
    enum: [ ro, rw, admin ]
  validation_status:
    $comment: corresponds to validation_status_enum in the database
    enum: [ error, fail, pass ]
  non_empty_string:
    type: string
    minLength: 1
  positive_integer:
    type: integer
    minimum: 1
  non_negative_integer:
    type: integer
    minimum: 0
  mojo_standard_placeholder:
    $comment: see https://metacpan.org/pod/Mojolicious::Guides::Routing#Standard-placeholders
    type: string
    pattern: '^[^/.]+$'
  mojo_relaxed_placeholder:
    $comment: see https://metacpan.org/pod/Mojolicious::Guides::Routing#Relaxed-placeholders
    type: string
    pattern: '^[^/]+$'
  json_pointer_token:
    $comment: a json-pointer reference-token (see RFC6901). Special characters requiring escaping are disallowed for simplicity.
    type: string
    pattern: '^[A-Za-z0-9_-]+$'
  email_address:
    type: string
    format: email
    $ref: '#/$defs/mojo_relaxed_placeholder'
  links:
    type: array
    uniqueItems: true
    items:
      type: string
      format: uri

# vim: set sts=2 sw=2 et :
